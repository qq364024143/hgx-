#接下来这步骤很关键，就是要将Client模块下的application.yml文件改为bootstrap.yml,这是很关键的，
#因为bootstrap.yml是比application.yml先加载的。
#bootstrap.yml优先级高于application.yml。就好比如，你应用程序都跑起来了，你配置还没加载，这不是扯淡吗？
#configServer微服务统一配置中心
#册中心
eureka.client.service-url.defaultZone=http://localhost:8080/eureka/

#服务名
spring.application.name=boke_configserver_client

#configserver的uri
spring.cloud.config.uri=http://localhost:9000/
#配置文件路径如 application.properties中的application可配置多个，这里配置了2个 ，远程仓库有两个配置文件
#config 客户端在没有 spring.cloud.config.name属性的时候，服务端{application} 获取的是客户端spring.application.name的值，否则，获取的是 spring.cloud.config.name的值。 
spring.cloud.config.name=hgxboke_config-dev
#配置文件的环境
spring.cloud.config.profile=dev
#仓库分支
spring.cloud.config.label=master
spring.cloud.config.failFast=true
spring.cloud.config.discovery.enabled=true
#如果要用到动态刷新
management.endpoints.web.exposure.include=bus-refresh
#configserver服务名
spring.cloud.config.discovery.serviceId=boke_config_server




#spring.cloud.config.uri=http://localhost:9000/
#spring.cloud.config.username=admin
#spring.cloud.config.password=123456
#spring.cloud.config.enabled=true
#spring.cloud.config.profile=${spring.profiles.active}
#spring.cloud.config.name=${spring.application.name},base,gzip,cors,rms,rms-manager,rabbitmq
#spring.cloud.config.label=master
#spring.cloud.config.failFast=true
#spring.cloud.config.discovery.enabled=true
#spring.cloud.config.discovery.serviceId=UDF-EUREKA-CONFIG-SERVER-DEMO